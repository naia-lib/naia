[package]
name = "naia-client-socket"
version = "0.9.0"
authors = ["connorcarpenter <connorcarpenter@gmail.com>"]
workspace = "../.."
description = "Abstraction to expose common API over a UDP socket on Linux, and a unreliable WebRTC datachannel on the browser"
documentation = "https://docs.rs/naia-client-socket"
homepage = "https://github.com/naia-rs/naia-socket"
repository = "https://github.com/naia-rs/naia-socket"
readme = "../README.md"
keywords = ["wasm", "webrtc", "udp", "networking", "gamedev"]
categories = ["network-programming", "game-development", "wasm", "web-programming"]
license = "MIT OR Apache-2.0"
edition = "2021"

[badges]
maintenance = { status = "actively-developed" }

[features]
wbindgen = [ "naia-socket-shared/wbindgen", "wasm-bindgen", "js-sys", "web_sys", "tinyjson" ]
mquad = [ "naia-socket-shared/mquad", "miniquad" ]

[dependencies]
naia-socket-shared = { path = "../shared", version = "=0.9.0" }
cfg-if = { version = "0.1.10" }
log = { version = "0.4" }
wasm-bindgen = { version = "0.2.45", optional = true  }
js-sys = { version = "0.3", optional = true  }
web_sys = { version = "0.3.22", package = "web-sys", features = [
    "RtcDataChannel", "RtcDataChannelInit", "RtcDataChannelType",
    "RtcIceCandidate", "RtcIceCandidateInit", "RtcConfiguration",
    "RtcPeerConnection", "RtcSdpType",  "RtcSessionDescription", "RtcSessionDescriptionInit",
    "XmlHttpRequest", "XmlHttpRequestEventTarget", "MessageEvent", "ProgressEvent", "ErrorEvent", "Blob" ], optional = true  }
tinyjson = { version = "=2.3.0", optional = true }
miniquad = { version = "=0.3.0-alpha.45", features = ["log-impl"], optional = true }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
local_ipaddress = { version = "0.1.3" }

[target.'cfg(target_arch = "wasm32")'.dependencies]
regex = { version = "1.5.4" }